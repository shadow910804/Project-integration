@model ECommercePlatform.Models.ViewModels.CartItemListViewModel

@{
    ViewData["Title"] = "Ë≥ºÁâ©Ëªä";

    // Ë®àÁÆóÁ∏ΩÈáëÈ°çÊôÇËÄÉÊÖÆÊäòÊâ£ÂÉπ
    decimal CalculateItemPrice(ECommercePlatform.Models.Product product)
    {
        // Ê™¢Êü•ÊòØÂê¶Âú®ÊäòÊâ£ÊúüÈñì
        if (product.DiscountPrice.HasValue &&
            product.DiscountStart.HasValue && product.DiscountEnd.HasValue &&
            DateTime.Now >= product.DiscountStart.Value &&
            DateTime.Now <= product.DiscountEnd.Value)
        {
            return product.DiscountPrice.Value;
        }
        return product.Price;
    }
    var totalAmount = Model.CartItem?.Sum(item => item.Quantity * CalculateItemPrice(item.Product)) ?? 0;
    var totalItems = Model.CartItem?.Sum(item => item.Quantity) ?? 0;
}

<div class="container">
    <div class="row">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">È¶ñÈ†Å</a></li>
                    <li class="breadcrumb-item active">Ë≥ºÁâ©Ëªä</li>
                </ol>
            </nav>

            <h1 class="mb-4">üõí Ë≥ºÁâ©Ëªä</h1>
        </div>
    </div>

    @if (Model.CartItem != null && Model.CartItem.Any())
    {
        <div class="row">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Ë≥ºÁâ©Ê∏ÖÂñÆ (@totalItems ‰ª∂ÂïÜÂìÅ)</h5>
                    </div>
                    <div class="card-body p-0">
                        @foreach (var item in Model.CartItem)
                        {
                            var currentPrice = CalculateItemPrice(item.Product);
                            var hasDiscount = item.Product.DiscountPrice.HasValue &&
                            item.Product.DiscountStart.HasValue && item.Product.DiscountEnd.HasValue &&
                            DateTime.Now >= item.Product.DiscountStart.Value &&
                            DateTime.Now <= item.Product.DiscountEnd.Value &&
                            item.Product.DiscountPrice < item.Product.Price;

                            <div class="cart-item p-3 border-bottom" data-cart-id="@item.Id">
                                <div class="row align-items-center">
                                    <!-- ÂïÜÂìÅÂúñÁâá -->
                                    <div class="col-md-2 text-center">
                                        @if (!string.IsNullOrEmpty(item.Product.ImageUrl))
                                        {
                                            <img src="@item.Product.ImageUrl" alt="@item.Product.Name"
                                                 class="img-fluid rounded" style="max-height: 80px;">
                                        }
                                        else
                                        {
                                            <div class="bg-light rounded d-flex align-items-center justify-content-center"
                                                 style="width: 80px; height: 80px; margin: 0 auto;">
                                                <span style="font-size: 2rem;">üì±</span>
                                            </div>
                                        }
                                    </div>

                                    <!-- ÂïÜÂìÅË≥áË®ä -->
                                    <div class="col-md-4">
                                        <h6 class="mb-1">
                                            <a asp-controller="Product" asp-action="Details" asp-route-id="@item.Product.Id"
                                               class="text-decoration-none">
                                                @item.Product.Name
                                            </a>
                                        </h6>
                                        <small class="text-muted">@item.Product.Description</small>

                                        <!-- ÊäòÊâ£ÊèêÈÜí -->
                                        @if (hasDiscount)
                                        {
                                            var discountPercent = Math.Round((1 - (item.Product.DiscountPrice!.Value / item.Product.Price)) * 100);
                                            <div class="text-success small mt-1">
                                                <i class="fas fa-tag"></i> ÈôêÊôÇÁâπÂÉπ -@discountPercent%
                                            </div>
                                        }

                                        <!-- ÂïÜÂìÅÁãÄÊÖã -->
                                        @if (!item.Product.IsActive)
                                        {
                                            <div class="text-danger small mt-1">
                                                <i class="fas fa-exclamation-triangle"></i> ÂïÜÂìÅÂ∑≤‰∏ãÊû∂
                                            </div>
                                        }

                                        <!-- Â∫´Â≠òÊèêÈÜíÔºàÂ¶ÇÊûúÊúâStockÂ±¨ÊÄßÔºâ -->
                                        @try
                                        {
                                            var stockValue = (int?)item.Product.GetType().GetProperty("Stock")?.GetValue(item.Product);
                                            if (stockValue.HasValue && stockValue <= 5 && stockValue > 0)
                                            {
                                                <div class="text-warning small mt-1">
                                                    <i class="fas fa-exclamation-triangle"></i> ÂÉÖÂâ© @stockValue ‰ª∂
                                                </div>
                                            }
                                        }
                                        catch
                                        {
                                            <!-- ÂøΩÁï•Â∫´Â≠òÊ™¢Êü• -->
                                        }
                                    </div>

                                    <!-- ÂñÆÂÉπ -->
                                    <div class="col-md-2 text-center">
                                        @if (hasDiscount)
                                        {
                                            <div class="fw-bold text-danger">$@currentPrice.ToString("N0")</div>
                                            <small class="text-muted">
                                                <del>$@item.Product.Price.ToString("N0")</del>
                                            </small>
                                        }
                                        else
                                        {
                                            <div class="fw-bold">$@currentPrice.ToString("N0")</div>
                                        }
                                    </div>

                                    <!-- Êï∏ÈáèÊéßÂà∂ -->
                                    <div class="col-md-2">
                                        @if (item.Product.IsActive)
                                        {
                                            @try
                                            {
                                                var stockValue = (int?)item.Product.GetType().GetProperty("Stock")?.GetValue(item.Product);
                                                var maxQuantity = stockValue ?? 999; // Â¶ÇÊûúÊ≤íÊúâÂ∫´Â≠òÈôêÂà∂ÔºåÈ†êË®≠999

                                                <div class="input-group">
                                                    <button class="btn btn-outline-secondary btn-sm quantity-btn"
                                                            data-action="decrease" data-cart-id="@item.Id">
                                                        -
                                                    </button>
                                                    <input type="number" class="form-control form-control-sm text-center quantity-input"
                                                           value="@item.Quantity" min="1" max="@maxQuantity"
                                                           data-cart-id="@item.Id" data-price="@currentPrice"
                                                           style="max-width: 70px;">
                                                    <button class="btn btn-outline-secondary btn-sm quantity-btn"
                                                            data-action="increase" data-cart-id="@item.Id">
                                                        +
                                                    </button>
                                                </div>
                                            }
                                            catch
                                            {
                                                <!-- Â¶ÇÊûúÊ≤íÊúâStockÂ±¨ÊÄßÔºå‰∏çÈôêÂà∂ÊúÄÂ§ßÊï∏Èáè -->
                                                <div class="input-group">
                                                    <button class="btn btn-outline-secondary btn-sm quantity-btn"
                                                            data-action="decrease" data-cart-id="@item.Id">
                                                        -
                                                    </button>
                                                    <input type="number" class="form-control form-control-sm text-center quantity-input"
                                                           value="@item.Quantity" min="1"
                                                           data-cart-id="@item.Id" data-price="@currentPrice"
                                                           style="max-width: 70px;">
                                                    <button class="btn btn-outline-secondary btn-sm quantity-btn"
                                                            data-action="increase" data-cart-id="@item.Id">
                                                        +
                                                    </button>
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            <div class="text-center">
                                                <span class="badge bg-secondary">@item.Quantity</span>
                                            </div>
                                        }
                                    </div>

                                    <!-- Â∞èË®àÂíåÁßªÈô§ -->
                                    <div class="col-md-2 text-center">
                                        <div class="fw-bold text-primary subtotal" data-cart-id="@item.Id">
                                            $@((item.Quantity * currentPrice).ToString("N0"))
                                        </div>
                                        <button class="btn btn-sm btn-outline-danger mt-1 remove-btn"
                                                data-cart-id="@item.Id">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- ÁπºÁ∫åË≥ºÁâ© -->
                <div class="mt-3">
                    <a asp-controller="Product" asp-action="Index" class="btn btn-outline-primary">
                        <i class="fas fa-arrow-left"></i> ÁπºÁ∫åË≥ºÁâ©
                    </a>

                    <!-- Ê∏ÖÁ©∫Ë≥ºÁâ©Ëªä -->
                    @if (Model.CartItem.Any() || Model.CartItemWithStatus.Any())
                    {
                        <button class="btn btn-outline-secondary ms-2" onclick="clearCart()">
                            <i class="fas fa-trash"></i> Ê∏ÖÁ©∫Ë≥ºÁâ©Ëªä
                        </button>
                    }
                </div>
            </div>

            <!-- Ë®ÇÂñÆÊëòË¶Å -->
            <div class="col-lg-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Ë®ÇÂñÆÊëòË¶Å</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-2">
                            <span>ÂïÜÂìÅÊï∏ÈáèÔºö</span>
                            <span id="total-items">@totalItems ‰ª∂</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>ÂïÜÂìÅÈáëÈ°çÔºö</span>
                            <span id="subtotal">$@totalAmount.ToString("N0")</span>
                        </div>

                        <!-- ÊäòÊâ£ÂÑ™ÊÉ† -->
                        @{
                            var totalSavings = Model.CartItem.Sum(item =>
                            {
                                if (item.Product.DiscountPrice.HasValue &&
                                item.Product.DiscountStart.HasValue && item.Product.DiscountEnd.HasValue &&
                                DateTime.Now >= item.Product.DiscountStart.Value &&
                                DateTime.Now <= item.Product.DiscountEnd.Value &&
                                item.Product.DiscountPrice < item.Product.Price)
                                {
                                    return (item.Product.Price - item.Product.DiscountPrice.Value) * item.Quantity;
                                }
                                return 0;
                            });
                        }

                        @if (totalSavings > 0)
                        {
                            <div class="d-flex justify-content-between mb-2 text-success">
                                <span>ÊäòÊâ£ÂÑ™ÊÉ†Ôºö</span>
                                <span>-$@totalSavings.ToString("N0")</span>
                            </div>
                        }

                        <div class="d-flex justify-content-between mb-2">
                            <span>ÈÅãË≤ªÔºö</span>
                            <span id="shipping">
                                @if (totalAmount >= 1000)
                                {
                                    <span class="text-success">ÂÖçË≤ª</span>
                                }
                                else
                                {
                                    <span>$100</span>
                                }
                            </span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between fw-bold fs-5">
                            <span>Á∏ΩË®àÔºö</span>
                            <span id="total-amount" class="text-primary">
                                $@((totalAmount >= 1000 ? totalAmount : totalAmount + 100).ToString("N0"))
                            </span>
                        </div>

                        @if (totalAmount < 1000)
                        {
                            <small class="text-info d-block mt-2">
                                <i class="fas fa-info-circle"></i>
                                Êªø $1,000 ‰∫´ÂÖçÈÅãË≤ªÔºÅÈÇÑÂ∑Æ $@((1000 - totalAmount).ToString("N0"))
                            </small>
                        }

                        @if (totalSavings > 0)
                        {
                            <small class="text-success d-block mt-1">
                                <i class="fas fa-gift"></i>
                                Êú¨Ê¨°Ë≥ºÁâ©Â∑≤ÁÇ∫ÊÇ®ÁØÄÁúÅ $@totalSavings.ToString("N0")
                            </small>
                        }

                        <!-- Ê™¢Êü•ÊòØÂê¶Êúâ‰∏ãÊû∂ÂïÜÂìÅ -->
                        @{
                            var hasInactiveProducts = Model.CartItem.Any(item => !item.Product.IsActive);
                        }

                        <div class="d-grid gap-2 mt-3">
                            @if (hasInactiveProducts)
                            {
                                <div class="alert alert-warning">
                                    <i class="fas fa-exclamation-triangle"></i>
                                    Ë≥ºÁâ©Ëªä‰∏≠ÊúâÂ∑≤‰∏ãÊû∂ÂïÜÂìÅÔºåË´ãÁßªÈô§ÂæåÂÜçÁµêÂ∏≥
                                </div>
                                <button class="btn btn-secondary btn-lg" disabled>
                                    <i class="fas fa-ban"></i> ÁÑ°Ê≥ïÁµêÂ∏≥
                                </button>
                            }
                            else
                            {
                                <a asp-controller="Order" asp-action="Checkout" class="btn btn-primary btn-lg">
                                    <i class="fas fa-credit-card"></i> ÂâçÂæÄÁµêÂ∏≥
                                </a>
                            }

                            <button class="btn btn-outline-warning" onclick="saveForLater()">
                                <i class="fas fa-heart"></i> ÂÑ≤Â≠òÁÇ∫ÊúÄÊÑõ
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Êé®Ëñ¶ÂïÜÂìÅ -->
                <div class="card mt-3">
                    <div class="card-header">
                        <h6 class="mb-0">Êé®Ëñ¶ÂïÜÂìÅ</h6>
                    </div>
                    <div class="card-body">
                        <small class="text-muted">Ê†πÊìöÊÇ®ÁöÑË≥ºÁâ©ËªäÊé®Ëñ¶</small>
                        <div class="mt-2">
                            <a asp-controller="Product" asp-action="Index" asp-route-sort="recommended"
                               class="btn btn-sm btn-outline-primary">
                                Êü•ÁúãÊé®Ëñ¶ ‚Üí
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- Á©∫Ë≥ºÁâ©Ëªä -->
        <div class="row">
            <div class="col-12">
                <div class="text-center py-5">
                    <div class="mb-4" style="font-size: 5rem;">üõí</div>
                    <h3 class="text-muted mb-3">ÊÇ®ÁöÑË≥ºÁâ©ËªäÊòØÁ©∫ÁöÑ</h3>
                    <p class="text-muted mb-4">ÈÇÑÊ≤íÊúâÊ∑ªÂä†‰ªª‰ΩïÂïÜÂìÅÂà∞Ë≥ºÁâ©Ëªä</p>
                    <a asp-controller="Product" asp-action="Index" class="btn btn-primary btn-lg">
                        <i class="fas fa-shopping-bag"></i> ÈñãÂßãË≥ºÁâ©
                    </a>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {

            // Êï∏ÈáèÊåâÈàïÈªûÊìä
            $('.quantity-btn').click(function() {
                const action = $(this).data('action');
                const cartId = $(this).data('cart-id');
                const input = $(`.quantity-input[data-cart-id="${cartId}"]`);
                let quantity = parseInt(input.val());
                const maxQuantity = parseInt(input.attr('max')) || 999;

                if (action === 'increase' && quantity < maxQuantity) {
                    quantity++;
                } else if (action === 'decrease' && quantity > 1) {
                    quantity--;
                }

                input.val(quantity);
                updateQuantity(cartId, quantity);
            });

            // Êï∏ÈáèËº∏ÂÖ•Ê°ÜËÆäÊõ¥
            $('.quantity-input').change(function() {
                const cartId = $(this).data('cart-id');
                const quantity = parseInt($(this).val());
                const maxQuantity = parseInt($(this).attr('max')) || 999;

                if (quantity > maxQuantity) {
                    $(this).val(maxQuantity);
                    updateQuantity(cartId, maxQuantity);
                } else if (quantity < 1) {
                    $(this).val(1);
                    updateQuantity(cartId, 1);
                } else {
                    updateQuantity(cartId, quantity);
                }
            });

            // ÁßªÈô§ÂïÜÂìÅ
            $('.remove-btn').click(function() {
                const cartId = $(this).data('cart-id');
                if (confirm('Á¢∫ÂÆöË¶ÅÁßªÈô§Ê≠§ÂïÜÂìÅÂóéÔºü')) {
                    removeItem(cartId);
                }
            });
        });

        // Êõ¥Êñ∞Êï∏Èáè
        function updateQuantity(cartId, quantity) {
            $.ajax({
                url: '/Cart/UpdateQuantity',
                type: 'POST',
                data: { cartItemId: cartId, quantity: quantity },
                success: function(response) {
                    if (response.success) {
                        updateCartDisplay();
                        if (window.refreshCartCount) {
                            window.refreshCartCount();
                        }
                    } else {
                        alert('Êõ¥Êñ∞Â§±ÊïóÔºö' + response.message);
                        location.reload();
                    }
                },
                error: function() {
                    alert('Á≥ªÁµ±ÈåØË™§ÔºåË´ãÁ®çÂæåÂÜçË©¶');
                }
            });
        }

        // ÁßªÈô§ÂïÜÂìÅ
        function removeItem(cartId) {
            $.ajax({
                url: '/Cart/RemoveItem',
                type: 'POST',
                data: { cartItemId: cartId },
                success: function(response) {
                    if (response.success) {
                        $(`.cart-item[data-cart-id="${cartId}"]`).fadeOut(300, function() {
                            $(this).remove();
                            updateCartDisplay();
                            if (window.refreshCartCount) {
                                window.refreshCartCount();
                            }

                            // Â¶ÇÊûúË≥ºÁâ©ËªäÁ©∫‰∫ÜÔºåÈáçÊñ∞ËºâÂÖ•È†ÅÈù¢
                            if ($('.cart-item').length === 0) {
                                location.reload();
                            }
                        });
                    } else {
                        alert('ÁßªÈô§Â§±ÊïóÔºö' + response.message);
                    }
                },
                error: function() {
                    alert('Á≥ªÁµ±ÈåØË™§ÔºåË´ãÁ®çÂæåÂÜçË©¶');
                }
            });
        }

        // Ê∏ÖÁ©∫Ë≥ºÁâ©Ëªä
        function clearCart() {
            if (confirm('Á¢∫ÂÆöË¶ÅÊ∏ÖÁ©∫Êï¥ÂÄãË≥ºÁâ©ËªäÂóéÔºü')) {
                $.ajax({
                    url: '/Cart/ClearCart',
                    type: 'POST',
                    success: function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert('Ê∏ÖÁ©∫Â§±ÊïóÔºö' + response.message);
                        }
                    },
                    error: function() {
                        alert('Á≥ªÁµ±ÈåØË™§ÔºåË´ãÁ®çÂæåÂÜçË©¶');
                    }
                });
            }
        }

        // Êõ¥Êñ∞Ë≥ºÁâ©ËªäÈ°ØÁ§∫
        function updateCartDisplay() {
            let totalItems = 0;
            let subtotal = 0;

            $('.cart-item').each(function() {
                const cartId = $(this).data('cart-id');
                const quantity = parseInt($(`.quantity-input[data-cart-id="${cartId}"]`).val());
                const price = parseFloat($(`.quantity-input[data-cart-id="${cartId}"]`).data('price'));
                const itemTotal = quantity * price;

                // Êõ¥Êñ∞Â∞èË®à
                $(`.subtotal[data-cart-id="${cartId}"]`).text('$' + itemTotal.toLocaleString());

                totalItems += quantity;
                subtotal += itemTotal;
            });

            // Êõ¥Êñ∞Á∏ΩË®à
            $('#total-items').text(totalItems + ' ‰ª∂');
            $('#subtotal').text('$' + subtotal.toLocaleString());

            // Ë®àÁÆóÈÅãË≤ª
            const shipping = subtotal >= 1000 ? 0 : 100;
            $('#shipping').html(shipping === 0 ? '<span class="text-success">ÂÖçË≤ª</span>' : '$100');

            // Êõ¥Êñ∞Á∏ΩÈáëÈ°ç
            const total = subtotal + shipping;
            $('#total-amount').text('$' + total.toLocaleString());
        }

        // ÂÑ≤Â≠òÁÇ∫ÊúÄÊÑõ
        function saveForLater() {
            alert('Ê≠§ÂäüËÉΩÈñãÁôº‰∏≠...');
        }
    </script>
}

<style>
    .cart-item:hover {
        background-color: #f8f9fa;
    }

    .quantity-input::-webkit-outer-spin-button,
    .quantity-input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    .quantity-input[type=number] {
        -moz-appearance: textfield;
    }
</style>